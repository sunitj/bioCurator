services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_ENV: ${APP_MODE:-development}
    container_name: biocurator-app
    environment:
      - APP_MODE=${APP_MODE:-development}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONUNBUFFERED=1
      # Database connection overrides for Docker networking
      - REDIS_URL=redis://redis:6379/0
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_PASSWORD=dev_password
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/biocurator_dev
      - QDRANT_URL=http://qdrant:6333
      - INFLUXDB_URL=http://influxdb:8086
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
      - ./logs:/logs
      - ./data:/data
    ports:
      - "8080:8080" # Health endpoints
      - "9090:9090" # Prometheus metrics
    networks:
      - biocurator-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Working Memory - Redis
  redis:
    image: redis:7-alpine
    container_name: biocurator-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - biocurator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Knowledge Graph Database - Neo4j
  neo4j:
    image: neo4j:5.15-community
    container_name: biocurator-neo4j
    environment:
      - NEO4J_AUTH=neo4j/dev_password
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=1G
      - NEO4J_server_memory_pagecache_size=512m
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-import:/var/lib/neo4j/import
      - neo4j-plugins:/plugins
    networks:
      - biocurator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "cypher-shell", "--username", "neo4j", "--password", "dev_password", "RETURN 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Vector Database - Qdrant
  qdrant:
    # image: qdrant/qdrant:v1.7.3
    image: ghcr.io/qdrant/qdrant/qdrant:v1.15.4-unprivileged
    container_name: biocurator-qdrant
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    ports:
      - "6333:6333" # HTTP API
      - "6334:6334" # gRPC API
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - biocurator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "sh", "-c", "kill -0 1" ]
      interval: 15s
      timeout: 3s
      retries: 3
      start_period: 5s
    # Relational Database - PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: biocurator-postgres
    environment:
      - POSTGRES_DB=biocurator_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - biocurator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d biocurator_dev" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Time-series Database - InfluxDB
  influxdb:
    image: influxdb:2.7-alpine
    container_name: biocurator-influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin_password
      - DOCKER_INFLUXDB_INIT_ORG=biocurator
      - DOCKER_INFLUXDB_INIT_BUCKET=agent_metrics
      - DOCKER_INFLUXDB_INIT_RETENTION=30d
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=dev_token_12345
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    networks:
      - biocurator-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8086/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  biocurator-network:
    driver: bridge

volumes:
  # Redis volumes
  redis-data:
    driver: local

  # Neo4j volumes
  neo4j-data:
    driver: local
  neo4j-logs:
    driver: local
  neo4j-import:
    driver: local
  neo4j-plugins:
    driver: local

  # Qdrant volumes
  qdrant-data:
    driver: local

  # PostgreSQL volumes
  postgres-data:
    driver: local

  # InfluxDB volumes
  influxdb-data:
    driver: local
  influxdb-config:
    driver: local
